version: "2.2"
services:

    sw-zookeeper:
        image: confluentinc/cp-zookeeper:5.3.1
        restart: always
        hostname: sw-zookeeper
        container_name: sw-zookeeper
        environment:
            ZOOKEEPER_SERVER_ID: 1
            ZOOKEEPER_CLIENT_PORT: "2181"
            ZOOKEEPER_TICK_TIME: "2000"
        ports:
            - "2181:2181"
        networks:
            - default

    sw-kafka:
        image: confluentinc/cp-enterprise-kafka:5.3.1
        hostname: sw-kafka
        container_name: sw-kafka
        depends_on:
            - sw-zookeeper
        ports:
            - "9092:9092"
            - "29092:29092"
        networks: 
            - default
        environment:
            KAFKA_ZOOKEEPER_CONNECT: "sw-zookeeper:2181"
            KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT_HOST:PLAINTEXT,PLAINTEXT:PLAINTEXT
            KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
            KAFKA_ADVERTISED_LISTENERS: PLAINTEXT_HOST://localhost:9092,PLAINTEXT://sw-kafka:29092
            KAFKA_BROKER_ID: 1
            KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
            KAFKA_BROKER_RACK: "r1"
            KAFKA_DELETE_TOPIC_ENABLE: "true"
            KAFKA_AUTO_CREATE_TOPICS_ENABLE: "false"
            KAFKA_JMX_PORT: 9991
            KAFKA_METRIC_REPORTERS: "io.confluent.metrics.reporter.ConfluentMetricsReporter"
            CONFLUENT_METRICS_REPORTER_BOOTSTRAP_SERVERS: "sw-kafka:29092"
            CONFLUENT_METRICS_REPORTER_MAX_REQUEST_SIZE: 10485760
            CONFLUENT_METRICS_REPORTER_TOPIC_REPLICAS: 1
            #Set to false To avoid race condition with control-center
            CONFLUENT_METRICS_REPORTER_TOPIC_CREATE: "true"

    sw-schema-registry:
        image: confluentinc/cp-schema-registry:5.3.1
        hostname: sw-schema-registry
        container_name: sw-schema-registry
        volumes:
            - ./projects:/opt/projects
        depends_on:
        - sw-kafka
        ports:
            - "8081:8081"
        environment:
            SCHEMA_REGISTRY_HOST_NAME: sw-schema-registry
            SCHEMA_REGISTRY_KAFKASTORE_BOOTSTRAP_SERVERS: 'sw-kafka:29092'

    sw-ksql-server:
        image: confluentinc/cp-ksql-server:5.3.1
        hostname: sw-ksql-server
        container_name: sw-ksql-server
        depends_on:
            - sw-kafka
            - sw-schema-registry
        ports:
            - "8088"
        environment:
            KSQL_CONFIG_DIR: "/etc/ksql"
            KSQL_LOG4J_OPTS: "-Dlog4j.configuration=file:/etc/ksql/log4j-rolling.properties"
            KSQL_BOOTSTRAP_SERVERS: "sw-kafka:29092"
            KSQL_HOST_NAME: sw-ksql-server
            KSQL_LISTENERS: "http://0.0.0.0:8088"
            KSQL_CACHE_MAX_BYTES_BUFFERING: 0
            KSQL_KSQL_SCHEMA_REGISTRY_URL: "http://sw-schema-registry:8081"
            KSQL_PRODUCER_INTERCEPTOR_CLASSES: "io.confluent.monitoring.clients.interceptor.MonitoringProducerInterceptor"
            KSQL_CONSUMER_INTERCEPTOR_CLASSES: "io.confluent.monitoring.clients.interceptor.MonitoringConsumerInterceptor"

